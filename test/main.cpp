#include "livewireparser.h"
#include "log.h"

int main()
{
    pml::LogStream::SetOutputLevel(pml::LOG_TRACE);
    pml::LogStream::AddOutput(std::make_unique<pml::LogOutput>());

    auto theMessage = pml::livewire::Parser::ParseMessage({0x03,0x00,0x02,0x07,0xc6,0xb0,0x5d,0xaa,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x4e,0x45,0x53,0x54,0x00,0x0a,0x50,0x56,0x45,0x52,0x08,0x00,0x02,0x41,0x44,0x56,0x54,0x07,0x01,0x54,0x45,0x52,0x4d,0x06,0x00,0x54,0x49,0x4e,0x44,0x49,0x00,0x06,0x41,0x44,0x56,0x56,0x01,0x00,0x00,0x00,0x69,0x48,0x57,0x49,0x44,0x08,0x00,0xc9,0x49,0x4e,0x49,0x50,0x01,0xc0,0xa8,0x00,0xc9,0x55,0x44,0x50,0x43,0x08,0x0f,0xa0,0x4e,0x55,0x4d,0x53,0x08,0x00,0x07,0x41,0x54,0x52,0x4e,0x03,0x00,0x20,0x4e,0x6f,0x64,0x65,0x2d,0x30,0x35,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x53,0x30,0x30,0x31,0x06,0x00,0x65,0x49,0x4e,0x44,0x49,0x00,0x0b,0x50,0x53,0x49,0x44,0x01,0x00,0x00,0x01,0xf5,0x53,0x48,0x41,0x42,0x07,0x00,0x46,0x53,0x49,0x44,0x01,0xef,0xc0,0x01,0xf5,0x46,0x41,0x53,0x54,0x07,0x02,0x46,0x41,0x53,0x4d,0x07,0x01,0x42,0x53,0x49,0x44,0x01,0xef,0xc1,0x01,0xf5,0x42,0x41,0x53,0x54,0x07,0x01,0x42,0x41,0x53,0x4d,0x07,0x00,0x4c,0x50,0x49,0x44,0x01,0x00,0x00,0x01,0xf5,0x53,0x54,0x50,0x4c,0x07,0x00,0x50,0x53,0x4e,0x4d,0x03,0x00,0x10,0x53,0x52,0x43,0x20,0x31,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x53,0x30,0x30,0x32,0x06,0x00,0x65,0x49,0x4e,0x44,0x49,0x00,0x0b,0x50,0x53,0x49,0x44,0x01,0x00,0x00,0x01,0xf6,0x53,0x48,0x41,0x42,0x07,0x00,0x46,0x53,0x49,0x44,0x01,0xef,0xc0,0x01,0xf6,0x46,0x41,0x53,0x54,0x07,0x02,0x46,0x41,0x53,0x4d,0x07,0x01,0x42,0x53,0x49,0x44,0x01,0xef,0xc1,0x01,0xf6,0x42,0x41,0x53,0x54,0x07,0x01,0x42,0x41,0x53,0x4d,0x07,0x00,0x4c,0x50,0x49,0x44,0x01,0x00,0x00,0x01,0xf6,0x53,0x54,0x50,0x4c,0x07,0x00,0x50,0x53,0x4e,0x4d,0x03,0x00,0x10,0x53,0x52,0x43,0x20,0x32,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x53,0x30,0x30,0x33,0x06,0x00,0x65,0x49,0x4e,0x44,0x49,0x00,0x0b,0x50,0x53,0x49,0x44,0x01,0x00,0x00,0x01,0xf7,0x53,0x48,0x41,0x42,0x07,0x00,0x46,0x53,0x49,0x44,0x01,0xef,0xc0,0x01,0xf7,0x46,0x41,0x53,0x54,0x07,0x02,0x46,0x41,0x53,0x4d,0x07,0x01,0x42,0x53,0x49,0x44,0x01,0xef,0xc1,0x01,0xf7,0x42,0x41,0x53,0x54,0x07,0x01,0x42,0x41,0x53,0x4d,0x07,0x00,0x4c,0x50,0x49,0x44,0x01,0x00,0x00,0x01,0xf7,0x53,0x54,0x50,0x4c,0x07,0x00,0x50,0x53,0x4e,0x4d,0x03,0x00,0x10,0x53,0x52,0x43,0x20,0x33,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x53,0x30,0x30,0x35,0x06,0x00,0x65,0x49,0x4e,0x44,0x49,0x00,0x0b,0x50,0x53,0x49,0x44,0x01,0x00,0x00,0x01,0xf9,0x53,0x48,0x41,0x42,0x07,0x00,0x46,0x53,0x49,0x44,0x01,0xef,0xc0,0x01,0xf9,0x46,0x41,0x53,0x54,0x07,0x02,0x46,0x41,0x53,0x4d,0x07,0x01,0x42,0x53,0x49,0x44,0x01,0xef,0xc1,0x01,0xf9,0x42,0x41,0x53,0x54,0x07,0x01,0x42,0x41,0x53,0x4d,0x07,0x00,0x4c,0x50,0x49,0x44,0x01,0x00,0x00,0x01,0xf9,0x53,0x54,0x50,0x4c,0x07,0x00,0x50,0x53,0x4e,0x4d,0x03,0x00,0x10,0x53,0x52,0x43,0x20,0x35,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x53,0x30,0x30,0x36,0x06,0x00,0x65,0x49,0x4e,0x44,0x49,0x00,0x0b,0x50,0x53,0x49,0x44,0x01,0x00,0x00,0x01,0xfa,0x53,0x48,0x41,0x42,0x07,0x00,0x46,0x53,0x49,0x44,0x01,0xef,0xc0,0x01,0xfa,0x46,0x41,0x53,0x54,0x07,0x02,0x46,0x41,0x53,0x4d,0x07,0x01,0x42,0x53,0x49,0x44,0x01,0xef,0xc1,0x01,0xfa,0x42,0x41,0x53,0x54,0x07,0x01,0x42,0x41,0x53,0x4d,0x07,0x00,0x4c,0x50,0x49,0x44,0x01,0x00,0x00,0x01,0xfa,0x53,0x54,0x50,0x4c,0x07,0x00,0x50,0x53,0x4e,0x4d,0x03,0x00,0x10,0x53,0x52,0x43,0x20,0x36,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x53,0x30,0x30,0x37,0x06,0x00,0x65,0x49,0x4e,0x44,0x49,0x00,0x0b,0x50,0x53,0x49,0x44,0x01,0x00,0x00,0x01,0xfb,0x53,0x48,0x41,0x42,0x07,0x00,0x46,0x53,0x49,0x44,0x01,0xef,0xc0,0x01,0xfb,0x46,0x41,0x53,0x54,0x07,0x02,0x46,0x41,0x53,0x4d,0x07,0x01,0x42,0x53,0x49,0x44,0x01,0xef,0xc1,0x01,0xfb,0x42,0x41,0x53,0x54,0x07,0x01,0x42,0x41,0x53,0x4d,0x07,0x00,0x4c,0x50,0x49,0x44,0x01,0x00,0x00,0x01,0xfb,0x53,0x54,0x50,0x4c,0x07,0x00,0x50,0x53,0x4e,0x4d,0x03,0x00,0x10,0x53,0x52,0x43,0x20,0x37,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x53,0x30,0x30,0x38,0x06,0x00,0x65,0x49,0x4e,0x44,0x49,0x00,0x0b,0x50,0x53,0x49,0x44,0x01,0x00,0x00,0x01,0xfc,0x53,0x48,0x41,0x42,0x07,0x00,0x46,0x53,0x49,0x44,0x01,0xef,0xc0,0x01,0xfc,0x46,0x41,0x53,0x54,0x07,0x02,0x46,0x41,0x53,0x4d,0x07,0x01,0x42,0x53,0x49,0x44,0x01,0xef,0xc1,0x01,0xfc,0x42,0x41,0x53,0x54,0x07,0x01,0x42,0x41,0x53,0x4d,0x07,0x00,0x4c,0x50,0x49,0x44,0x01,0x00,0x00,0x01,0xfc,0x53,0x54,0x50,0x4c,0x07,0x00,0x50,0x53,0x4e,0x4d,0x03,0x00,0x10,0x53,0x52,0x43,0x20,0x38,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00});

    
    
    if(theMessage)
    {
        pmlLog() << theMessage->ip;
        for(const auto& [src, details] : theMessage->mSources)
        {
            pmlLog() << src << "\t" << details.sName << "\t" << details.nStream;
        }
        
    }
    else
    {
        pmlLog(pml::LOG_ERROR) << "Unable to parse message";
    }

    getchar();
    return 0;
}